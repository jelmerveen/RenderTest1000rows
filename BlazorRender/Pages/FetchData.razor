@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (irisSet == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="tablde">
        <thead>
            <tr>
                <th>SepalLength</th>
                <th>SepalWidth</th>
                <th>PetalLength</th>
                <th>PetalWidth</th>
                <th>Species</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var flower in irisSet)
            {
                <tr>
                    <td>@flower.sepalLength</td>
                    <td>@flower.sepalWidth</td>
                    <td>@flower.petalLength</td>
                    <td>@flower.petalWidth </td>
                    <td>@flower.species </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IrisSet[] irisSet;

    protected override async Task OnInitializedAsync()
    {
        irisSet = await Http.GetFromJsonAsync<IrisSet[]>("sample-data/mockIrisSet.json");
    }

    public class IrisSet
    {
        public float sepalLength { get; set; }
        public float sepalWidth { get; set; }
        public float petalLength { get; set; }
        public float petalWidth { get; set; }
        public string species { get; set; }
    }
}
